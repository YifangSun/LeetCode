#define MAXN 16

class TreeAncestor {
public:
    int _n;
    int anc[50005][MAXN];
    TreeAncestor(int n, vector<int>& parent) {
        _n = n;
        for(int i=0; i<n; i++){
            anc[i][0] = parent[i];
        }
        for(int j=1; j<MAXN; j++){
            for(int i=0; i<n; i++){
                if(anc[i][j-1] == -1)
                    anc[i][j] = -1;
                else
                    anc[i][j] = anc[ anc[i][j-1] ][j-1];
            }
        }        
    }
    
    int getKthAncestor(int node, int k) {
        int ans = 0;
        for(int i=MAXN-1; i>=0; i--){
            while(k >= (1 << i)){
                //cout << node << " ";
                node = anc[node][i];
                k -= (1 << i);
            }
            
            if(node == -1)   return -1;
        }
        return node;
    }
    
};

/**
 * Your TreeAncestor object will be instantiated and called as such:
 * TreeAncestor* obj = new TreeAncestor(n, parent);
 * int param_1 = obj->getKthAncestor(node,k);
 */

class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        int l1 = s1.size();
        int l2 = s2.size();
        int l3 = s3.size();
        if(l1 + l2 != l3)
            return false;
        int dp[l1+1][l2+1];
        memset(dp, 0, sizeof(dp));
        dp[0][0] = 1;

        for(int i=1; i<=l1; i++)
          if(s1[i-1] == s3[i-1] && dp[i-1][0] == 1)
              dp[i][0] = 1;
          else
              break;
        
        for(int i=1; i<=l2; i++)
          if(s2[i-1] == s3[i-1] && dp[0][i-1] == 1)
              dp[0][i] = 1;
          else
              break;

        for(int i=1; i<=l1; i++){
            for(int j=1; j<=l2; j++){
                if((s3[i+j-1] == s2[j-1] && dp[i][j-1] == 1)  || 
                   (s3[i+j-1] == s1[i-1] && dp[i-1][j] == 1)
                  )
                dp[i][j] = 1;
            }
        }
        //for(int i=0; i<=l1; i++){for(int j=0;j<=l2;j++)cout<<dp[i][j]<<" "; cout<<endl;}
        
        return dp[l1][l2];
    }

};

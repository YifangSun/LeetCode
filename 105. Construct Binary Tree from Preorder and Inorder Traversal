class Solution {
public:
    TreeNode* buildTree(vector<int>& p, vector<int>& i) {
        for(int k=0; k<i.size(); k++)  //put inorder into a map, convenient for us to search
            ma[i[k]]=k;
        return helper(p, 0, p.size(), i, 0, i.size());
    }
    
    TreeNode* helper(vector<int>& p, int l1, int r1, vector<int>& i, int l2, int r2) {
        if(l1==r1 || l2==r2)    return NULL;
        int j = ma[p[l1]];
        TreeNode* root = new TreeNode(p[l1]);
        root->left = helper(p, l1+1, l1+1+j-l2, i, l2, j);
        root->right = helper(p, l1+1+j-l2, r1, i, j+1, r2);
        return root;  
    }
private:
    unordered_map<int,int> ma;
};

class Solution {
public:
    unordered_map<string, vector<string>> mp;
    int ladderLength(string b, string e, vector<string>& wl) {
        for(string& w:wl)
            for(int i=0; i<w.size(); i++)
                mp[w.substr(0, i) + "#" + w.substr(i+1)].push_back(w);
        
        int ans = 1;
        queue<string> q;
        q.push(b);
        while(!q.empty()){
            ans++;
            queue<string> nq;
            while(!q.empty()){
                string s = q.front(); q.pop();
                for(int i=0; i<s.size(); i++){
                    string key = s.substr(0, i) + "#" + s.substr(i+1);
                    if(mp.count(key)){
                        for(string& ns:mp[key]){
                            if(ns==e) return ans;
                            nq.push(ns);
                        }
                    }
                    mp.erase(key);
                }
            }
            swap(q, nq);
        }
        
        return 0;
    }
};

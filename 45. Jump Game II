class Solution {
public:
    int jump(vector<int>& nums) {
        int n = nums.size();
        vector<int> dp(n, n+1);
        dp[0] = 0;
        for (int i = 0; i < n; i++) {
            if (i > 0 && nums[i] < nums[i-1])
                continue;
            for (int j = 1; j <= nums[i] && (i+j) < n; j++)
                dp[i+j] = min(dp[i+j], dp[i]+1);
            /*for(auto aa:dp)
                cout << aa << " ";
            cout << endl;*/
            
        }
        return dp[n-1];
    }
};
